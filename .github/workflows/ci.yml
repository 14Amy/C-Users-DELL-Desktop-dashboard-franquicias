name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Build with Gradle
      run: ./gradlew build

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Test with Gradle
      run: ./gradlew test

  sonar_analysis:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: ./gradlew sonarqube -Dsonar.projectKey=your_project_key -Dsonar.organization=your_organization -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  integration_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Run integration tests
      run: ./gradlew integrationTest


  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: actions-hub/kubectl@master
      with:
        version: 'v1.18.0'

    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f k8s/deployment.yaml

  prometheus:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: actions-hub/kubectl@master
      with:
        version: 'v1.18.0'

    - name: Deploy Prometheus
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f k8s/prometheus.yaml

      
  production_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: actions-hub/kubectl@master
      with:
        version: 'v1.18.0'

    - name: Deploy to Production
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f k8s/production.yaml
      if: github.ref == 'refs/heads/main' && success()

